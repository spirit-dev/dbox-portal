<?xml version="1.0" encoding="UTF-8"?>

<project name="Project Test" default="build">
    <property name="workspace" value="${basedir}"/>
    <property name="sourcedir" value="${basedir}/src"/>
    <property name="builddir" value="${workspace}/qa"/>

    <target name="build"
            depends="prepare,composer,vendors,parameters,lint,phploc,pdepend,phpcpd,phpmd-ci,phpcs-ci,phpdox,phpunit,phpcb"/>

    <target name="build-parallel" depends="prepare,lint,tools-parallel,phpunit,phpcb"/>

    <target name="tools-parallel" description="Run tools in parallel">
        <parallel threadCount="2">
            <sequential>
                <antcall target="pdepend"/>
                <antcall target="phpmd-ci"/>
            </sequential>
            <antcall target="phpcpd"/>
            <antcall target="phpcs-ci"/>
            <antcall target="phploc"/>
            <antcall target="phpdox"/>
        </parallel>
    </target>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${builddir}"/>
    </target>

    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${builddir}"/>
        <mkdir dir="${builddir}/logs"/>
        <mkdir dir="${builddir}/pdepend"/>

        <mkdir dir="${builddir}/htmlreports"/>
        <mkdir dir="${builddir}/htmlreports/Code_Coverage"/>
        <mkdir dir="${builddir}/api"/>
        <mkdir dir="${builddir}/code-browser"/>
        <!--<mkdir dir="${builddir}/coverage"/>-->
        <mkdir dir="${builddir}/docs"/>
    </target>

    <target name="lint" description="Perform syntax check of sourcecode files">
        <apply executable="php" failonerror="true">
            <arg value="-l"/>
            <fileset dir="${sourcedir}">
                <include name="**/*.php"/>
                <modified/>
            </fileset>
            <fileset dir="${sourcedir}">
                <include name="**/*Test.php"/>
                <modified/>
            </fileset>
        </apply>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="phploc">
            <arg value="--log-csv"/>
            <arg value="${builddir}/logs/phploc.csv"/>
            <arg path="${sourcedir}"/>
        </exec>
    </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="pdepend">
            <arg value="--jdepend-xml=${builddir}/logs/jdepend.xml"/>
            <arg value="--jdepend-chart=${builddir}/pdepend/dependencies.svg"/>
            <arg value="--overview-pyramid=${builddir}/pdepend/overview-pyramid.svg"/>
            <arg path="${sourcedir}"/>
        </exec>
    </target>

    <!--<target name="phpmd" description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">-->
    <!--<exec executable="phpmd">-->
    <!--<arg path="${basedir}/src" />-->
    <!--<arg value="text" />-->
    <!--<arg value="${builddir}/logs/phpmd.xml" />-->
    <!--</exec>-->
    <!--</target>-->

    <!--<target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">-->
    <!--<exec executable="phpmd">-->
    <!--<arg path="${sourcedir}" />-->
    <!--<arg value="xml" />-->
    <!--<arg value="codesize,unusedcode,naming" />-->
    <!--<arg value="&#45;&#45;reportfile" />-->
    <!--<arg value="${builddir}/logs/pmd.xml" />-->
    <!--</exec>-->
    <!--</target>-->

    <target name="phpmd-ci" description="Generate pmd.xml using PHPMD">
        <exec executable="phpmd">
            <arg line="${sourcedir}
              xml
              codesize,design,naming,unusedcode
              --reportfile ${builddir}/logs/pmd.xml"/>
        </exec>
    </target>

    <target name="phpcs"
            description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpcs">
            <arg value="--standard=Symfony2"/>
            <arg path="${sourcedir}"/>
        </exec>
    </target>

    <target name="phpcs-ci"
            description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="phpcs">
            <arg value="--report=checkstyle"/>
            <arg value="--report-file=${builddir}/logs/checkstyle.xml"/>
            <arg value="--standard=Symfony2"/>
            <arg path="${sourcedir}"/>
        </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="phpcpd">
            <arg value="--log-pmd"/>
            <arg value="${builddir}/logs/pmd-cpd.xml"/>
            <arg path="${sourcedir}"/>
        </exec>
    </target>

    <target name="phpdox" description="Generate API documentation using phpDox">
        <exec executable="phpdox">
            <!--<arg line="-d '${sourcedir}' -t '${builddir}/docs' &#45;&#45;title='Tempo' "/>-->
        </exec>
    </target>

    <!--<target name="phpdox" description="Generate project documentation using phpDox">-->
    <!--<exec executable="phpdox" dir="${builddir}/docs" taskname="phpdox &#45;&#45;skel"/>-->
    <!--<property name="phpdox.done" value="true"/>-->
    <!--</target>-->

    <target name="phpunit" description="Run unit tests with PHPUnit">
        <exec executable="phpunit" failonerror="false">
            <arg value="-c"/>
            <arg path="${workspace}/phpunit.xml.dist"/>
            <arg value="--log-junit"/>
            <arg path="${builddir}/logs/phpunit.xml"/>
            <arg value="--coverage-clover"/>
            <arg path="${builddir}/logs/coverage/clover.xml"/>
            <arg value="--coverage-html"/>
            <arg path="${builddir}/logs/coverage/"/>
        </exec>
    </target>

    <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="phpcb">
            <arg value="--log"/>
            <arg path="${builddir}/logs"/>
            <arg value="--source"/>
            <arg path="${sourcedir}"/>
            <arg value="--output"/>
            <arg path="${builddir}/code-browser"/>
        </exec>
    </target>

    <target name="composer" description="Update composer.phar">
        <exec executable="php" failonerror="true">
            <arg value="composer.phar"/>
            <arg value="self-update"/>
        </exec>
    </target>

    <target name="vendors" description="Update vendors">
        <exec executable="php" failonerror="true">
            <arg value="composer.phar"/>
            <arg value="update"/>
        </exec>
    </target>

    <target name="parameters" description="Copy parameters">
        <exec executable="cp" failonerror="true">
            <arg path="app/config/parameters.yml.dist"/>
            <arg path="app/config/parameters.yml"/>
        </exec>
    </target>

</project>